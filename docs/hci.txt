#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <bluetooth/hci.h>
#include <bluetooth/hci_lib.h>

int main() {
    inquiry_info *ii = NULL;
    int max_rsp, num_rsp, dev_id, sock, len, flags;
    char addr[19] = { 0 };
    char name[248] = { 0 };

    // Get the first available Bluetooth device
    dev_id = hci_get_route(NULL);

    // Open a Bluetooth socket
    sock = hci_open_dev(dev_id);
    if (dev_id < 0 || sock < 0) {
        perror("Error opening socket");
        exit(1);
    }

    len = 8;  // Timeout = 10 * 1.28 seconds
    max_rsp = 255;  // Maximum number of devices to discover
    flags = IREQ_CACHE_FLUSH;

    // Perform Bluetooth device discovery
    ii = (inquiry_info *)malloc(max_rsp * sizeof(inquiry_info));
    num_rsp = hci_inquiry(dev_id, len, max_rsp, NULL, &ii, flags);
    if (num_rsp < 0) {
        perror("Error during inquiry");
        close(sock);
        exit(1);
    }

    // Print information about each discovered device
    for (int i = 0; i < num_rsp; i++) {
        ba2str(&(ii + i)->bdaddr, addr);
        memset(name, 0, sizeof(name));

        if (hci_read_remote_name(sock, &(ii + i)->bdaddr, sizeof(name), name, 0) < 0) {
            strcpy(name, "[unknown]");
        }

        printf("Device %d:\n", i + 1);
        printf("  Address: %s\n", addr);
        printf("  Name: %s\n", name);
    }

    // Free resources
    free(ii);
    close(sock);

    return 0;
}

